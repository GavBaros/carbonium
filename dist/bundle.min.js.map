{"version":3,"file":"bundle.min.js","sources":["../src/carbonium.ts"],"sourcesContent":["/**!\n @preserve Carbonium 0.1\n @copyright 2020 Edwin Martin\n @license MIT\n */\n\nexport function $(arg: string, doc?: Document): CarboniumList {\n  const nodelist: NodeListOf<HTMLElement> = (doc || document).querySelectorAll(\n    arg\n  );\n  return <CarboniumList><any> new Proxy<NodeListOf<HTMLElement>>(nodelist, proxyHandler);\n}\n\n// Used by classList\nlet classListNodelist: NodeListOf<HTMLElement>;\n\nconst proxyHandler: ProxyHandler<NodeListOf<HTMLElement>> = {\n  get(target, prop) {\n    // Return iterator when asked for iterator\n    if (prop == Symbol.iterator) {\n      return function* () {\n        for (let i = 0; i < target.length; i++) {\n          yield target[i];\n        }\n      };\n    }\n\n    // Special case for classList\n    if (prop == \"classList\") {\n      classListNodelist = target;\n      const propValue = Reflect.get(document.body, prop);\n      return new Proxy(propValue, proxyHandler);\n    }\n\n    // classList.add, contains, removeâ€¦\n    if (target instanceof DOMTokenList) {\n      const propValue = Reflect.get(document.body.classList, prop);\n\n      if (typeof propValue == \"function\") {\n        return new Proxy<Function>(propValue, {\n          apply: function (target, thisArg, argumentsList) {\n            classListNodelist.forEach((el) => {\n              Reflect.apply(target, el.classList, argumentsList);\n            });\n            return new Proxy(classListNodelist, proxyHandler);\n          },\n        });\n      } else {\n        return propValue;\n      }\n    }\n\n    // Are we dealing with an Array function?\n    if (Array.prototype.hasOwnProperty(prop)) {\n      const propValue = Reflect.get(Array.prototype, prop);\n      if (typeof propValue == \"function\") {\n        return new Proxy<Function>(propValue, {\n          apply: function (target, thisArg, argumentsList) {\n            const ret = Reflect.apply(target, thisArg, argumentsList);\n            // forEach returns same array instead of undefined\n            const newTarget = typeof ret != \"undefined\" ? ret : thisArg;\n            return new Proxy(newTarget, proxyHandler);\n          },\n        });\n      }\n    }\n\n    // Get property or call function on DOM elements\n    if (target.length > 0) {\n      // Might be DOM element specific, like input.select(),\n      // so use first array element to get reference\n      if (prop in target[0]) {\n        const propValue = Reflect.get(target[0], prop);\n        if (typeof propValue == \"function\") {\n          return new Proxy(propValue, proxyDOMFunctionHandler);\n        } else {\n          return propValue;\n        }\n      }\n    } else {\n      // Empty list, targeted DOM element unknown,\n      // use document.body\n      if (prop in document.body) {\n        const propValue = Reflect.get(document.body, prop);\n        if (typeof propValue == \"function\") {\n          return new Proxy(propValue, proxyDOMFunctionHandler);\n        } else {\n          return propValue;\n        }\n      }\n    }\n\n    // Default\n    return Reflect.get(target, prop);\n  },\n\n  // DOM property is set\n  set(target, prop, value) {\n    target.forEach((el) => {\n      Reflect.set(el, prop, value);\n    });\n    return true;\n  },\n};\n\nconst proxyDOMFunctionHandler: ProxyHandler<Function> = {\n  apply: function (target, thisArg, argumentsList) {\n    // Apply on individual elements\n    for (const el of thisArg) {\n      Reflect.apply(target, el, argumentsList);\n    }\n    return thisArg;\n  },\n};\n\n// TODO: Replace HTMLInputElement with union of all possible elements\ntype CarboniumType = HTMLInputElement & Array<HTMLElement>;\n\ninterface CarboniumList extends CarboniumType {\n  concat(...items: ConcatArray<HTMLElement>[]): CarboniumList;\n  concat(...items: (HTMLElement | ConcatArray<HTMLElement>)[]): CarboniumList;\n  reverse(): CarboniumList;\n  slice(start?: number, end?: number): CarboniumList;\n  splice(start: number, deleteCount?: number): CarboniumList;\n  splice(start: number, deleteCount: number, ...items: HTMLElement[]): CarboniumList;\n  forEach(callbackfn: (value: HTMLElement, index: number, array: HTMLElement[]) => void, thisArg?: any): CarboniumList;\n  filter(callbackfn: (value: HTMLElement, index: number, array: HTMLElement[]) => boolean, thisArg?: any): CarboniumList;\n  classList: CarboniumClassList;\n  setAttribute(qualifiedName: string, value: string): CarboniumList;\n}\n\ninterface CarboniumClassList extends DOMTokenList {\n  add(...tokens: string[]): CarboniumList;\n  remove(...tokens: string[]): CarboniumList;\n  replace(oldToken: string, newToken: string): CarboniumList;\n  forEach(callbackfn: (value: string, key: number, parent: DOMTokenList) => void, thisArg?: any): CarboniumList;\n}\n"],"names":["$","arg","doc","nodelist","document","querySelectorAll","Proxy","proxyHandler","classListNodelist","[object Object]","target","prop","Symbol","iterator","i","length","propValue","Reflect","get","body","DOMTokenList","classList","apply","thisArg","argumentsList","forEach","el","Array","prototype","hasOwnProperty","ret","proxyDOMFunctionHandler","set","value"],"mappings":";;;;;SAMgBA,EAAEC,EAAaC,GAC7B,MAAMC,GAAqCD,GAAOE,UAAUC,iBAC1DJ,GAEF,OAA4B,IAAIK,MAA+BH,EAAUI,GAI3E,IAAIC,EAEJ,MAAMD,EAAsD,CAC1DE,IAAIC,EAAQC,GAEV,GAAIA,GAAQC,OAAOC,SACjB,OAAO,YACL,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOK,OAAQD,UAC3BJ,EAAOI,IAMnB,GAAY,aAARH,EAAqB,CACvBH,EAAoBE,EACpB,MAAMM,EAAYC,QAAQC,IAAId,SAASe,KAAMR,GAC7C,OAAO,IAAIL,MAAMU,EAAWT,GAI9B,GAAIG,aAAkBU,aAAc,CAClC,MAAMJ,EAAYC,QAAQC,IAAId,SAASe,KAAKE,UAAWV,GAEvD,MAAwB,mBAAbK,EACF,IAAIV,MAAgBU,EAAW,CACpCM,MAAO,SAAUZ,EAAQa,EAASC,GAIhC,OAHAhB,EAAkBiB,QAASC,IACzBT,QAAQK,MAAMZ,EAAQgB,EAAGL,UAAWG,KAE/B,IAAIlB,MAAME,EAAmBD,MAIjCS,EAKX,GAAIW,MAAMC,UAAUC,eAAelB,GAAO,CACxC,MAAMK,EAAYC,QAAQC,IAAIS,MAAMC,UAAWjB,GAC/C,GAAwB,mBAAbK,EACT,OAAO,IAAIV,MAAgBU,EAAW,CACpCM,MAAO,SAAUZ,EAAQa,EAASC,GAChC,MAAMM,EAAMb,QAAQK,MAAMZ,EAAQa,EAASC,GAG3C,OAAO,IAAIlB,WADqB,IAAPwB,EAAqBA,EAAMP,EACxBhB,MAOpC,GAAIG,EAAOK,OAAS,GAGlB,GAAIJ,KAAQD,EAAO,GAAI,CACrB,MAAMM,EAAYC,QAAQC,IAAIR,EAAO,GAAIC,GACzC,MAAwB,mBAAbK,EACF,IAAIV,MAAMU,EAAWe,GAErBf,QAMX,GAAIL,KAAQP,SAASe,KAAM,CACzB,MAAMH,EAAYC,QAAQC,IAAId,SAASe,KAAMR,GAC7C,MAAwB,mBAAbK,EACF,IAAIV,MAAMU,EAAWe,GAErBf,EAMb,OAAOC,QAAQC,IAAIR,EAAQC,IAI7BqB,IAAG,CAACtB,EAAQC,EAAMsB,KAChBvB,EAAOe,QAASC,IACdT,QAAQe,IAAIN,EAAIf,EAAMsB,MAEjB,IAILF,EAAkD,CACtDT,MAAO,SAAUZ,EAAQa,EAASC,GAEhC,IAAK,MAAME,KAAMH,EACfN,QAAQK,MAAMZ,EAAQgB,EAAIF,GAE5B,OAAOD"}