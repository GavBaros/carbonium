{"version":3,"file":"bundle.min.js","sources":["../src/carbonium.ts"],"sourcesContent":["/**!\n @preserve Carbonium 0.1.6\n @copyright 2020 Edwin Martin\n @license MIT\n */\n\nexport function $<T extends HTMLElement = HTMLElement>(\n  selectors: string,\n  parentNode?: Document | ShadowRoot | HTMLElement\n): CarboniumType<T> {\n  const nodelist: NodeListOf<T> = (parentNode || document).querySelectorAll(\n    selectors\n  );\n  return <CarboniumType<T>>(\n    (<unknown>new Proxy<NodeListOf<T>>(nodelist, proxyHandler))\n  );\n}\n\n// Used by classList and style\nlet currentListNodelist: NodeListOf<HTMLElement>;\nlet propList: string;\n\nconst proxyHandler: ProxyHandler<NodeListOf<HTMLElement>> = {\n  get(target, prop) {\n    let propValue = null;\n\n    // Sure we don't need this?\n    // Return iterator when asked for iterator\n    // if (prop == Symbol.iterator) {\n    //   return function* () {\n    //     for (let i = 0; i < target.length; i++) {\n    //       yield target[i];\n    //     }\n    //   };\n    // }\n\n    // Special case for style, classList and relList\n    if (prop == \"style\" || prop == \"classList\" || prop == \"relList\") {\n      currentListNodelist = target;\n      propList = prop;\n      const propValue = Reflect.get(document.body, prop);\n      return new Proxy(propValue, proxyHandler);\n    }\n\n    // style.setProperty, getPropertyValue…, classList.add, contains, remove…, relList…\n    if (\n      target instanceof CSSStyleDeclaration ||\n      target instanceof DOMTokenList\n    ) {\n      propValue = Reflect.get(document.body[propList], prop);\n\n      if (typeof propValue == \"function\") {\n        return new Proxy<Function>(propValue, {\n          apply: function (target, thisArg, argumentsList) {\n            currentListNodelist.forEach((el) => {\n              Reflect.apply(target, el[propList], argumentsList);\n            });\n            return new Proxy(currentListNodelist, proxyHandler);\n          },\n        });\n      } else {\n        return propValue;\n      }\n    }\n\n    // Are we dealing with an Array function?\n    if (Array.prototype.hasOwnProperty(prop)) {\n      const propValue = Reflect.get(Array.prototype, prop);\n      if (typeof propValue == \"function\") {\n        return new Proxy<Function>(propValue, {\n          apply: function (target, thisArg, argumentsList) {\n            const ret = Reflect.apply(target, thisArg, argumentsList);\n            // forEach returns same array instead of undefined\n            const newTarget = typeof ret != \"undefined\" ? ret : thisArg;\n            return new Proxy(newTarget, proxyHandler);\n          },\n        });\n      }\n    }\n\n    // Get property or call function on DOM elements\n    if (target.length > 0) {\n      // Might be DOM element specific, like input.select(),\n      // so use first array element to get reference\n      if (prop in target[0]) {\n        propValue = Reflect.get(target[0], prop);\n      }\n    } else {\n      // Empty list, targeted DOM element unknown,\n      // use document.body\n      if (prop in document.body) {\n        propValue = Reflect.get(document.body, prop);\n      }\n    }\n\n    // Propagate DOM prop value\n    if (propValue) {\n      return new Proxy<Function>(propValue, {\n        apply: function (target, thisArg, argumentsList) {\n          let retFirst = null;\n          let first = true;\n          // Apply on individual elements\n          for (const el of thisArg) {\n            const ret = Reflect.apply(target, el, argumentsList);\n            if (first) {\n              retFirst = ret;\n              first = false;\n            }\n          }\n          return retFirst != null && retFirst != undefined ? retFirst : thisArg;\n        },\n      });\n    }\n\n    // Default\n    return Reflect.get(target, prop);\n  },\n\n  // DOM property is set\n  set(target, prop, value) {\n    if (\"forEach\" in target) {\n      target.forEach((el) => {\n        Reflect.set(el, prop, value);\n      });\n    } else {\n      Reflect.set(target, prop, value);\n    }\n    return true;\n  },\n};\n\nexport type CarboniumType<T extends HTMLElement = HTMLElement> = CarboniumList<\n  T\n> &\n  T;\n\ninterface CarboniumList<T extends HTMLElement> extends Array<T> {\n  concat(...items: ConcatArray<T>[]): CarboniumType<T>;\n\n  concat(...items: (T | ConcatArray<T>)[]): CarboniumType<T>;\n\n  reverse(): CarboniumType<T>;\n\n  slice(start?: number, end?: number): CarboniumType<T>;\n\n  splice(start: number, deleteCount?: number): CarboniumType<T>;\n\n  /* tslint:disable:unified-signatures */\n  splice(start: number, deleteCount: number, ...items: T[]): CarboniumType<T>;\n\n  forEach(\n    callbackfn: (value: T, index: number, array: T[]) => void,\n    thisArg?: any\n  ): CarboniumType<T>;\n\n  filter(\n    callbackfn: (value: T, index: number, array: T[]) => boolean,\n    thisArg?: any\n  ): CarboniumType<T>;\n\n  setAttribute(qualifiedName: string, value: string): CarboniumType<T>;\n\n  classList: CarboniumClassList<T>;\n  style: CarboniumStyleList<T>;\n}\n\ninterface CarboniumClassList<T extends HTMLElement> extends DOMTokenList {\n  add(...tokens: string[]): CarboniumType<T>;\n\n  remove(...tokens: string[]): CarboniumType<T>;\n\n  replace(oldToken: string, newToken: string): CarboniumType<T>;\n\n  forEach(\n    callbackfn: (value: string, key: number, parent: DOMTokenList) => void,\n    thisArg?: any\n  ): CarboniumType<T>;\n}\n\ninterface CarboniumStyleList<T extends HTMLElement>\n  extends CSSStyleDeclaration {\n  removeProperty(property: string): CarboniumList<T> & string;\n\n  setProperty(\n    property: string,\n    value: string | null,\n    priority?: string\n  ): CarboniumType<T>;\n}\n"],"names":["$","selectors","parentNode","nodelist","document","querySelectorAll","Proxy","proxyHandler","currentListNodelist","propList","[object Object]","target","prop","propValue","Reflect","get","body","CSSStyleDeclaration","DOMTokenList","apply","thisArg","argumentsList","forEach","el","Array","prototype","hasOwnProperty","ret","length","retFirst","first","undefined","set","value"],"mappings":";;;;;SAMgBA,EACdC,EACAC,GAEA,MAAMC,GAA2BD,GAAcE,UAAUC,iBACvDJ,GAEF,OACY,IAAIK,MAAqBH,EAAUI,GAKjD,IAAIC,EACAC,EAEJ,MAAMF,EAAsD,CAC1DG,IAAIC,EAAQC,GACV,IAAIC,EAAY,KAahB,GAAY,SAARD,GAA2B,aAARA,GAA+B,WAARA,EAAmB,CAC/DJ,EAAsBG,EACtBF,EAAWG,EACX,MAAMC,EAAYC,QAAQC,IAAIX,SAASY,KAAMJ,GAC7C,OAAO,IAAIN,MAAMO,EAAWN,GAI9B,GACEI,aAAkBM,qBAClBN,aAAkBO,aAIlB,OAFAL,EAAYC,QAAQC,IAAIX,SAASY,KAAKP,GAAWG,GAEzB,mBAAbC,EACF,IAAIP,MAAgBO,EAAW,CACpCM,MAAO,SAAUR,EAAQS,EAASC,GAIhC,OAHAb,EAAoBc,QAASC,IAC3BT,QAAQK,MAAMR,EAAQY,EAAGd,GAAWY,KAE/B,IAAIf,MAAME,EAAqBD,MAInCM,EAKX,GAAIW,MAAMC,UAAUC,eAAed,GAAO,CACxC,MAAMC,EAAYC,QAAQC,IAAIS,MAAMC,UAAWb,GAC/C,GAAwB,mBAAbC,EACT,OAAO,IAAIP,MAAgBO,EAAW,CACpCM,MAAO,SAAUR,EAAQS,EAASC,GAChC,MAAMM,EAAMb,QAAQK,MAAMR,EAAQS,EAASC,GAG3C,OAAO,IAAIf,WADqB,IAAPqB,EAAqBA,EAAMP,EACxBb,MAsBpC,OAfII,EAAOiB,OAAS,EAGdhB,KAAQD,EAAO,KACjBE,EAAYC,QAAQC,IAAIJ,EAAO,GAAIC,IAKjCA,KAAQR,SAASY,OACnBH,EAAYC,QAAQC,IAAIX,SAASY,KAAMJ,IAKvCC,EACK,IAAIP,MAAgBO,EAAW,CACpCM,MAAO,SAAUR,EAAQS,EAASC,GAChC,IAAIQ,EAAW,KACXC,GAAQ,EAEZ,IAAK,MAAMP,KAAMH,EAAS,CACxB,MAAMO,EAAMb,QAAQK,MAAMR,EAAQY,EAAIF,GAClCS,IACFD,EAAWF,EACXG,GAAQ,GAGZ,OAAmB,MAAZD,GAAgCE,MAAZF,EAAwBA,EAAWT,KAM7DN,QAAQC,IAAIJ,EAAQC,IAI7BoB,IAAG,CAACrB,EAAQC,EAAMqB,KACZ,YAAatB,EACfA,EAAOW,QAASC,IACdT,QAAQkB,IAAIT,EAAIX,EAAMqB,KAGxBnB,QAAQkB,IAAIrB,EAAQC,EAAMqB,IAErB"}