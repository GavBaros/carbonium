function e(e,t){const o=(t||document).querySelectorAll(e);return new Proxy(o,n)}let t;const n={get(e,r){if("classList"==r){t=e;const o=Reflect.get(document.body,r);return new Proxy(o,n)}if(e instanceof DOMTokenList){const e=Reflect.get(document.body.classList,r);return"function"==typeof e?new Proxy(e,{apply:function(e,o,r){return t.forEach(t=>{Reflect.apply(e,t.classList,r)}),new Proxy(t,n)}}):e}if(Array.prototype.hasOwnProperty(r)){const e=Reflect.get(Array.prototype,r);if("function"==typeof e)return new Proxy(e,{apply:function(e,t,o){const r=Reflect.apply(e,t,o);return new Proxy(void 0!==r?r:t,n)}})}if(e.length>0){if(r in e[0]){const t=Reflect.get(e[0],r);return"function"==typeof t?new Proxy(t,o):t}}else if(r in document.body){const e=Reflect.get(document.body,r);return"function"==typeof e?new Proxy(e,o):e}return Reflect.get(e,r)},set:(e,t,n)=>(e.forEach(e=>{Reflect.set(e,t,n)}),!0)},o={apply:function(e,t,n){for(const o of t)Reflect.apply(e,o,n);return t}};export{e as $};
//# sourceMappingURL=bundle.min.js.map
